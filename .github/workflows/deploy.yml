name: CD Pipeline
on:
  push:
    branches: [main]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Create and set up project directory
            sudo mkdir -p /home/${{ secrets.SSH_USERNAME }}
            sudo chown ${{ secrets.SSH_USERNAME }}:${{ secrets.SSH_USERNAME }} /home/${{ secrets.SSH_USERNAME }}
            
            # Update package index and install dependencies
            sudo apt-get update -y
            sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common

            # Add Docker's official GPG key
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

            # Install Docker
            sudo apt-get update -y
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io

            # Configure Docker permissions
            sudo usermod -aG docker ${{ secrets.SSH_USERNAME }}
            sudo systemctl restart docker
            newgrp docker

            # Install Docker Compose
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

            # Handle repository deployment
            cd /home/${{ secrets.SSH_USERNAME }}
            if [ ! -d "fastapi-book-project" ]; then
                git clone https://github.com/Benji918/fastapi-book-project.git
            fi
            cd fastapi-book-project/
            git fetch origin main
            git reset --hard origin/main

            # Ensure Docker Compose files are executable
            sudo chown -R ${{ secrets.SSH_USERNAME }}:${{ secrets.SSH_USERNAME }} .
            sudo chmod +x docker-compose.yml

            # Deploy with Docker Compose
            docker-compose down
            docker-compose up -d --build